{"version":3,"sources":["panels/Home.js","panels/Intro.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","role","o","Panel","PanelHeader","Group","Cell","before","photo_200","Avatar","src","description","city","title","first_name","last_name","FormItem","top","SliderSwitch","options","name","value","onSwitch","activeValue","Intro","snackBarError","userHasSeeIntro","centered","Div","className","CardGrid","size","ContentCard","image","subtitle","header","text","caption","maxHeight","FixedLayout","vertical","mode","onClick","ROUTES","STORAGE_KEYS","STATUS","App","useState","activePanel","setActivePanel","setUser","ScreenSpinner","popout","setPopout","setUserHasSeeIntro","snackBar","setSnackBar","setRole","useEffect","a","bridge","send","user","console","log","keys","Object","values","storageData","data","forEach","key","JSON","parse","hasSeenIntro","e","Snackbar","layout","onClose","style","backgroundColor","fill","width","height","duration","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","panel","viewIntro","stringify","View","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8dd32abd.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport FormItem from '@vkontakte/vkui/dist/components/FormItem/FormItem';\nimport SliderSwitch from '@vkontakte/vkui/dist/components/SliderSwitch/SliderSwitch';\n\n\nconst Home = ({id, go, fetchedUser, role, o}) => (\n    <Panel id={id}>\n        <PanelHeader>Хата</PanelHeader>\n        {/*{!city &&*/}\n        {/*<Fragment>*/}\n\n        {/*    <FormLayout action='/profiles'>*/}\n        {/*        <FixedLayout vertical='bottom'>*/}\n        {/*            <Div className='inp' style={{display: 'flex'}}>*/}\n\n        {/*            </Div>*/}\n        {/*        </FixedLayout>*/}\n\n        {/*        <FixedLayout vertical='bottom'>*/}\n        {/*            <Div style={{display: 'flex'}}>*/}\n        {/*                <Button className='Butto' onClick={o}>*/}\n        {/*                    Отправить*/}\n        {/*                </Button>*/}\n        {/*            </Div>*/}\n\n        {/*        </FixedLayout>*/}\n        {/*    </FormLayout>*/}\n        {/*</Fragment>*/}\n        {/*}*/}\n\n\n        {fetchedUser &&\n        <Fragment>\n\n            <Group>\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                >\n                    {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                </Cell>\n            </Group>\n        </Fragment>}\n        {!role &&\n        <Fragment>\n\n            <Group>\n                <FormItem top=\"Роль\">\n                    <SliderSwitch\n\n                        options={[{name: 'Ученик', value: 'stud'}, {name: 'Преподаватель', value: 'teach'}]}\n                        onSwitch={activeValue => {\n                            o(activeValue)\n                        }}\n                    />\n\n                </FormItem>\n            </Group>\n        </Fragment>\n        }\n        {role == 'stud' &&\n        <Fragment>\n            <h1>Ты {role}</h1>\n            <h2>Ты можешь искать интересующие тебя курсы и следить за своим развитием</h2>\n        </Fragment>\n        }\n        {role == 'teach' &&\n        <Fragment>\n\n            <h1>Ты {role}</h1>\n            <h2>Ты можешь добавлять свои курсы и управлять ими прямо здесь</h2>\n        </Fragment>\n        }\n    </Panel>\n);\n\n// Home.propTypes = {\n//     id: PropTypes.string.isRequired,\n//     go: PropTypes.func.isRequired,\n//     fetchedUser: PropTypes.shape({\n//         photo_200: PropTypes.string,\n//         first_name: PropTypes.string,\n//         last_name: PropTypes.string,\n//         city: PropTypes.shape({\n//             title: PropTypes.string,\n//         }),\n//     }),\n// };\n\nexport default Home;\n","import React, {Fragment} from 'react';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\nimport CardGrid from \"@vkontakte/vkui/dist/components/CardGrid/CardGrid\";\nimport ContentCard from \"@vkontakte/vkui/dist/components/ContentCard/ContentCard\";\n\n\n\nimport './1.css';\nimport {Button, Group} from \"@vkontakte/vkui\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\n\nconst Intro = ({id, snackBarError, fetchedUser, userHasSeeIntro, go}) => {\n    return (\n        <Panel id={id} centered={true}>\n            <PanelHeader>\n                Tracker Education\n            </PanelHeader>\n            {(!userHasSeeIntro && fetchedUser) &&\n            <Fragment>\n                <Group>\n                    <Div className='User'>\n                        {fetchedUser.photo_200 && <Avatar src={fetchedUser.photo_200}/>}\n                        <h2>Привет, {fetchedUser.first_name}!</h2>\n                        <h4>Это сервис для трекинга оффлайн кружков!</h4>\n                    </Div>\n                </Group>\n                <Div className='Button'>\n                        <CardGrid size=\"s\">\n                            <ContentCard\n                                image=\"https://pbs.twimg.com/profile_images/570586763576365056/yQpjwZsy.jpeg\"\n                                subtitle=\"ФОТОЧКА С ОПИСАНИЕМ ФУНКЦИОНАЛА\"\n                                header=\"ПОЗНАКОМИТЬ ПОЛЬЗОВАТЕЛЯ С ПРИЛОЖЕНИЕМ\"\n                                text=\"ПОЗНАКОМИТЬ ПОЛЬЗОВАТЕЛЯ С ПРИЛОЖЕНИЕМ\"\n                                caption=\"Photo by Meshi Marlboro\"\n                                maxHeight={500}\n                            />\n                            <ContentCard\n                                image=\"https://pbs.twimg.com/profile_images/570586763576365056/yQpjwZsy.jpeg\"\n                                subtitle=\"ФОТОЧКА С ОПИСАНИЕМ ФУНКЦИОНАЛА\"\n                                header=\"ПОЗНАКОМИТЬ ПОЛЬЗОВАТЕЛЯ С ПРИЛОЖЕНИЕМ ПОЗНАКОМИТЬ ПОЛЬЗОВАТЕЛЯ С ПРИЛОЖЕНИЕМ \"\n                                text=\"ПОЗНАКОМИТЬ ПОЛЬЗОВАТЕЛЯ С ПРИЛОЖЕНИЕМ\"\n                                caption=\"Photo by Meshi Marlboro\"\n                                maxHeight={500}\n                            />\n                            <ContentCard\n                                image=\"https://pbs.twimg.com/profile_images/570586763576365056/yQpjwZsy.jpeg\"\n                                subtitle=\"ФОТОЧКА С ОПИСАНИЕМ ФУНКЦИОНАЛА\"\n                                header=\"ПОЗНАКОМИТЬ ПОЛЬЗОВАТЕЛЯ С ПРИЛОЖЕНИЕМ\"\n                                text=\"ПОЗНАКОМИТЬ ПОЛЬЗОВАТЕЛЯ С ПРИЛОЖЕНИЕМ\"\n                                caption=\"Photo by Meshi Marlboro\"\n                                maxHeight={500}\n                            />\n                        </CardGrid>\n                <FixedLayout vertical='bottom'>\n\n                        <Button size='l' mode='commerce' onClick={go}>\n                            Ок\n                        </Button>\n\n\n                </FixedLayout>\n                </Div>\n            </Fragment>\n            }\n            {snackBarError}\n        </Panel>\n    )\n}\n;\n\n\nexport default Intro;\n","import React, {useState, useEffect} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Snackbar from \"@vkontakte/vkui/dist/components/Snackbar/Snackbar\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\nimport {AdaptivityProvider, AppRoot} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport {Icon16ErrorCircleFill} from '@vkontakte/icons';\nimport FormItem from \"@vkontakte/vkui/dist/components/FormItem/FormItem\";\n\nimport Home from './panels/Home';\nimport Intro from './panels/Intro';\n\n\nconst ROUTES = {\n    HOME: 'home',\n    INTRO: 'intro',\n\n};\n\nconst STORAGE_KEYS = {\n    STATUS: 'status',\n};\n\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState(ROUTES.INTRO);\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n\n    const [userHasSeeIntro, setUserHasSeeIntro] = useState(false);\n    const [snackBar, setSnackBar] = useState(false);\n    const [role, setRole] = useState('');\n\n\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n        async function fetchData() {\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            console.log(user);\n            const storageData = await bridge.send('VKWebAppStorageGet', {\n                keys: Object.values(STORAGE_KEYS)\n            });\n            console.log(storageData)\n            console.log(role);\n            const data = {};\n            storageData.keys.forEach(({key, value}) => {\n                try {\n                    data[key] = value ? JSON.parse(value) : {};\n                    switch (key) {\n                        case STORAGE_KEYS.STATUS:\n                            if (data[key].hasSeenIntro) {\n                                setActivePanel(ROUTES.HOME);\n                                setUserHasSeeIntro(true);\n                            }\n                            break;\n                        default:\n                            break\n                    }\n                } catch (e) {\n                    setSnackBar(<Snackbar layout='vertical'\n                                          onClose={() => setSnackBar(null)}\n                                          before={<Avatar size={24} style={{backgroundColor: 'var(--dynamic-red)'}}>\n                                              <Icon16ErrorCircleFill fill='#fff' width='14' height='14'/>\n                                          </Avatar>}\n                                          duration={900}\n                    >\n                        Проблемка с принятием\n                    </Snackbar>);\n\n                }\n            })\n\n            setUser(user);\n            setPopout(null);\n        }\n\n        fetchData();\n    }, []);\n\n    const go = panel => {\n        setActivePanel(panel);\n    };\n\n    const viewIntro = async function () {\n        try {\n            await bridge.send('VKWebAppStorageSet', {\n                key: STORAGE_KEYS.STATUS,\n                value: JSON.stringify({\n                    userHasSeeIntro: true\n                })\n            });\n            go(ROUTES.HOME);\n        } catch (error) {\n            setSnackBar(<Snackbar layout='vertical'\n                                  onClose={() => setSnackBar(null)}\n                                  before={<Avatar size={24} style={{backgroundColor: 'var(--dynamic-red)'}}>\n                                      <Icon16ErrorCircleFill fill='#fff' width='14' height='14'/>\n                                  </Avatar>}\n                                  duration={900}\n            >\n                Проблемка c отправкой\n            </Snackbar>);\n\n        }\n\n\n    }\n\n\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <View activePanel={activePanel} popout={popout}>\n\n                    <Home id={ROUTES.HOME} fetchedUser={fetchedUser} go={go} snackBarError={snackBar} role={role} o={setRole} />\n                    <Intro id={ROUTES.INTRO} fetchedUser={fetchedUser} go={viewIntro()} snackBarError={snackBar}\n                           userHasSeeIntro={userHasSeeIntro}/>\n\n\n\n\n                </View>\n            </AppRoot>\n        </AdaptivityProvider>\n    );\n}\n\nexport default App;\n\n","// import \"core-js/featerus/map\"\n// import \"core-js/featerus/set\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}